/* QT stylesheet don't have variables. Some sort of sass solution could be used.

/* Brand colors

Dark orange / text
rgb(128, 33, 19);

Medium orange
rgb(199, 99, 44);

Light orange
rgb(248, 231, 209);

Red black
rgb(40, 12, 9)

Secondary brand color
Finland blue
rgb(0,46,162);

Complementary blue to medium orange.
rgb(44, 134, 199);

Light background
rgb(252, 251, 252);

Dark background
rgb(40, 12, 9)

==== Layout color

1. primary brand color if its versatile enough to use on black and white backgrounds.
Medium orange


2. Low contrast neutral. On light and dark.
Light background
rgb(243, 242, 243);


Dark background
rgb(210, 210, 210);


3. Higher contrast neutral. On light and dark.
Light background


Dark background
IGNORED

4. Reduced contrast neutral = reverse of 2.
Light background
rgb(210, 210, 210);

Dark background
IGNORED

===== Denotive colors

1. Error color, non brand red. Must fit both dark and light background.
2. Success color, usually green. Must fit both dark and light background.
3. Disabled colors. Two colors for light and dark backgrounds. Content must be readable even if its disabled.
Light background

Dark background


===== Interactive colors. Use as few as possible.

1. Choose one color. Can be a brand color.
Color
rgb(250, 158, 66); Medium orange

lighter +1
rgb(248, 215, 179);

darker -1
rgb(199, 99, 44);

lighter +2
rgb(248, 231, 209);

darker -2
rgb(128, 33, 19);

*/



QFrame {
    border-width: 2px;
    border-color: rgb(120, 120, 120);
}

/* Define buttons */
QPushButton,  QComboBox {
    border-style: solid;
	border-radius: 6px;
    font: bold 14px;
    min-width: 20px;
    min-height: 20px;
    padding: 1px;
    background-color: rgb(199, 99, 44);
    border-color: rgb(199, 99, 44);
	border-top-color: rgb(248, 215, 179);
	border-bottom-color: rgb(128, 33, 19);
    border-width: 4px;
    color: rgb(255, 255, 255);
    margin: 0px;
    position: relative;
    top: -10ex;
}

QPushButton:pressed {
    background-color: rgb(185, 87, 0);
    border-color: rgb(185, 87, 0);
    border-style: inset;
}

QPushButton:disabled {
    background-color: rgb(170, 170, 170);
    border-color: rgb(170, 170, 170);
    color: rgb(50, 50, 50);
}

/* red end call buttons */
QWidget#EndCallButton, QWidget#declineButton, QWidget#cancelCall {
    border-style: solid;
    border-width: 4px;
    font: bold 14px;
    min-width: 20px;
    min-height: 20px;
    padding: 1px;
    background-color: rgb(180, 60, 60);
	border-color: rgb(180, 60, 60);
}

/* green start call buttons */
QWidget#CallButton, QWidget#acceptButton {
    border-style: solid;
    border-width: 4px;
    font: bold 14px;
    min-width: 20px;
    min-height: 20px;
    padding: 1px;
    background-color: rgb(42, 186, 42);
    border-color: rgb(42, 186, 42);
	/*border-top-color: rgb(62, 226, 62);
	border-bottom-color: rgb(32, 156, 32);*/
}

/* because the contactlist button is so small, define separate borders. */
QWidget#CallButton {
    border-width: 2px;
}

/* set secondary background color */
QMenuBar, QListWidget, QWidget#OutgoingCall, QWidget#IncomingCall  {
	background-color: rgb(243, 242, 243);
}

/* Contactlist as well as in/out calling widgets. */
QListWidget, QWidget#OutgoingCall, QWidget#IncomingCall {
    border-style: solid;
	border-radius: 0px;
    border-width: 4px;
	border-color: rgb(243, 242, 243);
	/*border-top-color: rgb(252, 251, 252);
	border-bottom-color: rgb(210, 210, 210);*/
}

QListWidget::item {
    border-bottom: 1px solid rgb(180, 180, 180); 
	background-image: url(dense6pattern.png);
    background-repeat: repeat-xy;
}

QComboBox {
    border-radius: 5px;
}


QMainWindow {
    background-color: rgb(252, 251, 252);
    border-style: inset;
}

QListWidget::item{
    margin: 0px;
    position: relative;
}

